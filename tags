!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BashGitPrompt	bash/montymagic-bash-git-prompt/bash-git-prompt.rb	/^class BashGitPrompt < Formula$/;"	c
D	bash/montymagic-bash-git-prompt/gitstatus.py	/^    D = dict()$/;"	v
PIPE	bash/montymagic-bash-git-prompt/gitstatus.py	/^from subprocess import Popen, PIPE$/;"	i
Popen	bash/montymagic-bash-git-prompt/gitstatus.py	/^from subprocess import Popen, PIPE$/;"	i
Print	bash/montymagic-bash-git-prompt/gitstatus.py	/^        Print = D["p"]  # 2.6 case$/;"	v
Print	bash/montymagic-bash-git-prompt/gitstatus.py	/^        def Print(*args, **kwd):  # 2.4, 2.5, define our own Print function$/;"	f
Print	bash/montymagic-bash-git-prompt/gitstatus.py	/^    Print = eval("print")  # python 3.0 case$/;"	v
__add_gitvar_status	bash/montymagic-bash-git-prompt/gitprompt.sh	/^    __add_gitvar_status() {$/;"	f
__add_status	bash/montymagic-bash-git-prompt/gitprompt.sh	/^    __add_status() {$/;"	f
__all__	bash/montymagic-bash-git-prompt/gitstatus.py	/^__all__ = ["Print"]$/;"	v
__chk_gitvar_status	bash/montymagic-bash-git-prompt/gitprompt.sh	/^    __chk_gitvar_status() {$/;"	f
__git_prompt_read	bash/montymagic-bash-git-prompt/gitstatus.sh	/^__git_prompt_read ()$/;"	f
_cdargs_aliases	common/profile.d/601-functions-cdargs	/^function _cdargs_aliases ()$/;"	f
_cdargs_complete	common/profile.d/601-functions-cdargs	/^_cdargs_complete() {$/;"	f
_cdargs_exec	common/profile.d/601-functions-cdargs	/^function _cdargs_exec ()$/;"	f
_cdargs_get_dir	common/profile.d/601-functions-cdargs	/^function _cdargs_get_dir ()$/;"	f
_def_color	bash/montymagic-bash-git-prompt/prompt-colors.sh	/^  _def_color() {$/;"	f
_map_colors	bash/montymagic-bash-git-prompt/prompt-colors.sh	/^  _map_colors() {$/;"	f
_term_color	bash/montymagic-bash-git-prompt/prompt-colors.sh	/^  _term_color() {$/;"	f
ahead	bash/montymagic-bash-git-prompt/gitstatus.py	/^                        ahead = '%s%s' % (symbols['ahead of'], num_ahead)$/;"	v
all_lines	bash/montymagic-bash-git-prompt/gitstatus_pre-1.7.10.sh	/^all_lines() { echo "${1}" | grep -v "^$" | wc -l ; }$/;"	f
appLink	common/core.d/100-functions	/^function appLink() {$/;"	f
apps	common/core.d/100-functions	/^function apps() {$/;"	f
async_run	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function async_run() {$/;"	f
behind	bash/montymagic-bash-git-prompt/gitstatus.py	/^                        behind = '%s%s' % (symbols['behind'], num_behind)$/;"	v
branch	bash/montymagic-bash-git-prompt/gitstatus.py	/^            branch = get_tag_or_hash()$/;"	v
branch	bash/montymagic-bash-git-prompt/gitstatus.py	/^            branch = st[2].split(' ')[-1]$/;"	v
branch	bash/montymagic-bash-git-prompt/gitstatus.py	/^            branch = st[2].strip()$/;"	v
branch	bash/montymagic-bash-git-prompt/gitstatus.py	/^branch = ''$/;"	v
ca	common/profile.d/601-functions-cdargs	/^function ca ()$/;"	f
caveats	bash/montymagic-bash-git-prompt/bash-git-prompt.rb	/^  def caveats; <<~EOS$/;"	f	class:BashGitPrompt
cdb	common/profile.d/601-functions-cdargs	/^function cdb () $/;"	f
checkUpstream	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function checkUpstream() {$/;"	f
clean	bash/montymagic-bash-git-prompt/gitstatus.py	/^    clean = 0$/;"	v
clean	bash/montymagic-bash-git-prompt/gitstatus.py	/^    clean = 1$/;"	v
count_lines	bash/montymagic-bash-git-prompt/gitstatus_pre-1.7.10.sh	/^count_lines() { echo "${1}" | egrep -c "^${2}" ; }$/;"	f
cpb	common/profile.d/601-functions-cdargs	/^function cpb ()$/;"	f
createPrivateIndex	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function createPrivateIndex {$/;"	f
deepReadLink	common/core.d/100-functions	/^function deepReadLink() {$/;"	f
define_color_names	bash/montymagic-bash-git-prompt/prompt-colors.sh	/^define_color_names() {$/;"	f
divergence	bash/montymagic-bash-git-prompt/gitstatus.py	/^                divergence = ' '.join(rest.split(' ')[1:])$/;"	v
divergence	bash/montymagic-bash-git-prompt/gitstatus.py	/^                divergence = divergence.lstrip('[').rstrip(']')$/;"	v
doesTmuxSessionExist	common/profile.d/800-functions-tmux	/^function doesTmuxSessionExist$/;"	f
dynamicLookup	common/core.d/100-functions	/^function dynamicLookup()$/;"	f
echoc	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function echoc() {$/;"	f
ensureCmd	common/core.d/100-functions	/^function ensureCmd() {$/;"	f
getOsSpecificFile	common/profile.d/600-functions-shell	/^function getOsSpecificFile()$/;"	f
get_stash	bash/montymagic-bash-git-prompt/gitstatus.py	/^def get_stash():$/;"	f
get_tag_or_hash	bash/montymagic-bash-git-prompt/gitstatus.py	/^def get_tag_or_hash():$/;"	f
get_theme	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function get_theme() {$/;"	f
git_dirty_flag	bash/gitprompt	/^function git_dirty_flag {$/;"	f
git_prompt_color_samples	bash/montymagic-bash-git-prompt/git-prompt-help.sh	/^git_prompt_color_samples() {$/;"	f
git_prompt_config	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_config() {$/;"	f
git_prompt_dir	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_dir() {$/;"	f
git_prompt_examples	bash/montymagic-bash-git-prompt/git-prompt-help.sh	/^git_prompt_examples() {$/;"	f
git_prompt_help	bash/montymagic-bash-git-prompt/git-prompt-help.sh	/^git_prompt_help() {$/;"	f
git_prompt_list_themes	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_list_themes() {$/;"	f
git_prompt_load_colors	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_load_colors() {$/;"	f
git_prompt_load_theme	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_load_theme() {$/;"	f
git_prompt_make_custom_theme	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_make_custom_theme() {$/;"	f
git_prompt_reset	bash/montymagic-bash-git-prompt/gitprompt.sh	/^git_prompt_reset() {$/;"	f
git_prompt_toggle	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function git_prompt_toggle() {$/;"	f
gp_add_virtualenv_to_prompt	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_add_virtualenv_to_prompt {$/;"	f
gp_format_exit_status	bash/montymagic-bash-git-prompt/gitprompt.sh	/^gp_format_exit_status() {$/;"	f
gp_format_username_repo	bash/montymagic-bash-git-prompt/gitprompt.sh	/^gp_format_username_repo() {$/;"	f
gp_install_prompt	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_install_prompt {$/;"	f
gp_maybe_set_envar_to_path	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_maybe_set_envar_to_path() {$/;"	f
gp_set_file_var	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_set_file_var() {$/;"	f
gp_set_window_title	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_set_window_title {$/;"	f
gp_truncate_pwd	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function gp_truncate_pwd {$/;"	f
help_git_prompt	bash/montymagic-bash-git-prompt/git-prompt-help.sh	/^help_git_prompt() { git_prompt_help ; }$/;"	f
install	bash/montymagic-bash-git-prompt/bash-git-prompt.rb	/^  def install$/;"	f	class:BashGitPrompt
is_function	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function is_function {$/;"	f
mark	common/profile.d/601-functions-cdargs	/^function mark () $/;"	f
moveAndLink	common/core.d/100-functions	/^function moveAndLink()$/;"	f
mvb	common/profile.d/601-functions-cdargs	/^function mvb ()$/;"	f
np	bash/montymagic-bash-git-prompt/gitstatus.py	/^        exec ("from __future__ import print_function\\np=print", D)$/;"	i
num_ahead	bash/montymagic-bash-git-prompt/gitstatus.py	/^                        num_ahead = int(div[len('ahead '):].strip())$/;"	v
num_behind	bash/montymagic-bash-git-prompt/gitstatus.py	/^                        num_behind = int(div[len('behind '):].strip())$/;"	v
olderThanMinutes	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function olderThanMinutes() {$/;"	f
out	bash/montymagic-bash-git-prompt/gitstatus.py	/^out = '\\n'.join([$/;"	v
parse_git_branch	bash/gitprompt	/^function parse_git_branch {$/;"	f
po	bash/montymagic-bash-git-prompt/gitstatus.py	/^po = Popen(['git', 'status', '--porcelain', '--branch'], env={'LC_ALL': 'C'}, stdout=PIPE, stderr=PIPE)$/;"	v
pp	common/profile.d/600-functions-shell	/^function pp()$/;"	f
print	bash/montymagic-bash-git-prompt/gitstatus.py	/^        exec ("from __future__ import print_function\\np=print", D)$/;"	i
print_function	bash/montymagic-bash-git-prompt/gitstatus.py	/^        exec ("from __future__ import print_function\\np=print", D)$/;"	i
prompt_callback_default	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function prompt_callback_default {$/;"	f
prompt_func	bash/gitprompt	/^function prompt_func() {$/;"	f
pwdp	common/profile.d/600-functions-shell	/^function pwdp()$/;"	f
python_version	bash/montymagic-bash-git-prompt/gitstatus.py	/^    python_version = 2$/;"	v
python_version	bash/montymagic-bash-git-prompt/gitstatus.py	/^    python_version = 3$/;"	v
quid	common/core.d/100-functions	/^function quid() {$/;"	f
re	bash/montymagic-bash-git-prompt/gitstatus.py	/^import re$/;"	i
relative	common/core.d/100-functions	/^function relative() {$/;"	f
relink	common/core.d/100-functions	/^function relink(){$/;"	f
remote	bash/montymagic-bash-git-prompt/gitstatus.py	/^                remote = ''.join([behind, ahead])$/;"	v
remote	bash/montymagic-bash-git-prompt/gitstatus.py	/^    remote = '.'$/;"	v
remote	bash/montymagic-bash-git-prompt/gitstatus.py	/^    remote = remote.decode('utf-8')$/;"	v
remote	bash/montymagic-bash-git-prompt/gitstatus.py	/^remote = ''$/;"	v
replaceSymbols	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function replaceSymbols() {$/;"	f
requireCmd	common/core.d/100-functions	/^function requireCmd() {$/;"	f
requireSource	common/core.d/100-functions	/^function requireSource() {$/;"	f
setGitPrompt	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function setGitPrompt() {$/;"	f
setLastCommandState	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function setLastCommandState() {$/;"	f
setOrInstall	common/core.d/100-functions	/^function setOrInstall() {$/;"	f
showColor	bash/montymagic-bash-git-prompt/git-prompt-help.sh	/^  showColor() {$/;"	f
stashed	bash/montymagic-bash-git-prompt/gitstatus.py	/^stashed = get_stash()$/;"	v
status	bash/montymagic-bash-git-prompt/gitstatus.py	/^status = [(line[0], line[1], line[2:]) for line in stdout.decode('utf-8').splitlines()]$/;"	v
symbols	bash/montymagic-bash-git-prompt/gitstatus.py	/^symbols = {'ahead of': '↑·', 'behind': '↓·', 'prehash': ':'}$/;"	v
sys	bash/montymagic-bash-git-prompt/gitstatus.py	/^import sys$/;"	i
tmux	common/profile.d/800-functions-tmux	/^function tmux-attach()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-bb()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-bb-cx()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-bb-dbs()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-bb-docker()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-bb-plat()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-cx()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-cx-clean-database()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-dbs()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-dbs-clean-database()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-ensure-server()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-kill()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-launch-pane()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-launch-split-pane()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-mdi$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-new-window()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-raise-delayed-signal()$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-scala$/;"	f
tmux	common/profile.d/800-functions-tmux	/^function tmux-wait-for-signal()$/;"	f
to_str	bash/montymagic-bash-git-prompt/gitstatus.py	/^    to_str = str$/;"	v
to_str	bash/montymagic-bash-git-prompt/gitstatus.py	/^    to_str = unicode$/;"	v
trySource	common/core.d/100-functions	/^function trySource() {$/;"	f
updatePrompt	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function updatePrompt() {$/;"	f
update_old_git_prompt	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function update_old_git_prompt() {$/;"	f
verboseExec	common/core.d/100-functions	/^function verboseExec() {$/;"	f
we_are_on_repo	bash/montymagic-bash-git-prompt/gitprompt.sh	/^function we_are_on_repo() {$/;"	f
